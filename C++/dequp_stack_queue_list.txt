1. deque 双端数组，操作特点：在两端插入和删除效率比较高，在指定位置插入，也会引起数据元素的移动，
	支持随机访问，deque存储空间是 分段边连续的内存

2. stack 栈容器，规则：先进后出
	不能遍历，不提供迭代器，也不支持随机访问
	while( !stack.empty())
	{
		cout<<stack.top()<<endl;
		stack.pop();
	}


3. queue　队列容器，规则：先进先出
	不能遍历，不提供迭代器，也不支持随机访问

	while( !queue.empty())
	{
		cout<<stack.top()<<endl;
		queue.pop();
	}

4. list 链表容器，非常常用，STL中的 双向链表
	在任何位置插入和删除效率都比较好
	缺点：不支持随机访问，因为内存空间是非连续的，指针域需要内存空间开销
	
	有自己的sort排序方法，find()方法，要清楚查找的是基础数据类型还是对象，
	要提供回调函数（条件）

5. 对组 pair : pair<int, int> ret; / make_pair(2, 3);	将两个值合并成一个值















